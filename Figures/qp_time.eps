%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 57 124 610 397
%%HiResBoundingBox: 57.208 124.368 609.275 396.430
%%Title: /var/tmp/oct-LdCN6u.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Jun 18 03:06:44 2012
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/var/tmp/oct-LdCN6u.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (aleks)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun 18 03:06:44 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% encoding for code page koi8r (8-bit Russian)
% version 1.0:	- Mainly letters are mapped. The following positions
% (JFi)		  are left blank (undefined):
%		-- first 32 positions,
%		-- frame characters,
%		-- a few special characters.

/reencodeKOI8R {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding KOI8REncoding def } if
} if
currentdict end definefont
} def
/KOI8REncoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
/SF100000/SF110000/SF010000/SF030000/SF020000/SF040000/SF080000/SF090000
/SF060000/SF070000/SF050000/SF600000/SF570000/SF610000/SF580000/SF590000
/SF140000/SF150000/SF160000/SS260000/filledbox/bullet/radical/approxequal
/lessequal/greaterequal/space/SS270000/degree/twosuperior/periodcentered/divide
/SF430000/SF240000/SF510000/afii10071/SF520000/SF390000/SF220000/SF210000
/SF250000/SF500000/SF490000/SF380000/SF280000/SF270000/SF260000/SF360000
/SF370000/SF420000/SF190000/afii10023/SF200000/SF230000/SF470000/SF480000
/SF410000/SF450000/SF460000/SF400000/SF540000/SF530000/SF440000/copyright
/afii10096/afii10065/afii10066/afii10088/afii10069/afii10070/afii10086/afii10068
/afii10087/afii10074/afii10075/afii10076/afii10077/afii10078/afii10079/afii10080
/afii10081/afii10097/afii10082/afii10083/afii10084/afii10085/afii10072/afii10067
/afii10094/afii10093/afii10073/afii10090/afii10095/afii10091/afii10089/afii10092
/afii10048/afii10017/afii10018/afii10040/afii10021/afii10022/afii10038/afii10020
/afii10039/afii10026/afii10027/afii10028/afii10029/afii10030/afii10031/afii10032
/afii10033/afii10049/afii10034/afii10035/afii10036/afii10037/afii10024/afii10019
/afii10046/afii10045/afii10025/afii10042/afii10047/afii10043/afii10041/afii10044
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Times reencodeKOI8R def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 320 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.000 UP
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1760 2464 9183 4351 BoxColFill
LCb setrgbcolor
1760 2464 M
0 4351 V
9183 0 V
0 -4351 V
-9183 0 V
stroke
0.500 UL
LTb
1760 2464 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 2464 M
[ [(Times) 320.0 0.0 true true 0 (0)]
] -106.7 MRshow
0.500 UL
LTb
1760 3334 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 3334 M
[ [(Times) 320.0 0.0 true true 0 (0.001)]
] -106.7 MRshow
0.500 UL
LTb
1760 4204 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 4204 M
[ [(Times) 320.0 0.0 true true 0 (0.002)]
] -106.7 MRshow
0.500 UL
LTb
1760 5075 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 5075 M
[ [(Times) 320.0 0.0 true true 0 (0.003)]
] -106.7 MRshow
0.500 UL
LTb
1760 5945 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 5945 M
[ [(Times) 320.0 0.0 true true 0 (0.004)]
] -106.7 MRshow
0.500 UL
LTb
1760 6815 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 6815 M
[ [(Times) 320.0 0.0 true true 0 (0.005)]
] -106.7 MRshow
0.500 UL
LTb
1760 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 1760 2144 M
[ [(Times) 320.0 0.0 true true 0 (0)]
] -106.7 MCshow
0.500 UL
LTb
3597 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 3597 2144 M
[ [(Times) 320.0 0.0 true true 0 (50)]
] -106.7 MCshow
0.500 UL
LTb
5433 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 5433 2144 M
[ [(Times) 320.0 0.0 true true 0 (100)]
] -106.7 MCshow
0.500 UL
LTb
7270 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 7270 2144 M
[ [(Times) 320.0 0.0 true true 0 (150)]
] -106.7 MCshow
0.500 UL
LTb
9106 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 9106 2144 M
[ [(Times) 320.0 0.0 true true 0 (200)]
] -106.7 MCshow
0.500 UL
LTb
10943 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 10943 2144 M
[ [(Times) 320.0 0.0 true true 0 (250)]
] -106.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1760 6815 N
0 -4351 V
9183 0 V
0 4351 V
-9183 0 V
Z stroke
0.00 0.00 0.00 C 256 4639 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 320.0 0.0 true true 0 (Time \(second\))]
] -106.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6351 1664 M
[ [(Times) 320.0 0.0 true true 0 (Number of sampling interval)]
] -106.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
2.000 UP
0.500 UL
LT0
0.00 0.00 1.00 C 1797 2913 Circle
1833 2898 Circle
1870 2925 Circle
1907 2928 Circle
1944 3066 Circle
1980 3063 Circle
2017 3075 Circle
2054 3037 Circle
2091 3202 Circle
2127 3171 Circle
2164 3200 Circle
2201 3199 Circle
2238 3216 Circle
2274 3203 Circle
2311 3209 Circle
2348 3209 Circle
2384 3211 Circle
2421 3211 Circle
2458 3357 Circle
2495 3352 Circle
2531 3377 Circle
2568 3351 Circle
2605 3352 Circle
2642 3355 Circle
2678 3359 Circle
2715 3360 Circle
2752 3363 Circle
2788 3363 Circle
2825 3367 Circle
2862 3379 Circle
2899 3378 Circle
2935 3373 Circle
2972 3378 Circle
3009 3378 Circle
3046 3384 Circle
3082 3382 Circle
3119 3530 Circle
3156 3531 Circle
3193 3538 Circle
3229 3539 Circle
3266 3549 Circle
3303 3758 Circle
3339 3587 Circle
3376 3595 Circle
3413 3712 Circle
3450 3707 Circle
3486 3715 Circle
3523 3744 Circle
3560 3766 Circle
3597 3757 Circle
3633 3732 Circle
3670 4113 Circle
3707 3753 Circle
3744 3744 Circle
3780 3753 Circle
3817 3753 Circle
3854 3782 Circle
3890 3791 Circle
3927 3798 Circle
3964 3798 Circle
4001 3818 Circle
4037 3782 Circle
4074 3975 Circle
4111 3946 Circle
4148 3961 Circle
4184 3973 Circle
4221 3985 Circle
4258 3986 Circle
4295 4394 Circle
4331 3989 Circle
4368 4182 Circle
4405 4190 Circle
4441 4190 Circle
4478 4197 Circle
4515 4203 Circle
4552 4204 Circle
4588 4213 Circle
4625 3965 Circle
4662 3945 Circle
4699 3946 Circle
4735 3956 Circle
4772 3956 Circle
4809 3976 Circle
4845 3965 Circle
4882 3997 Circle
4919 4388 Circle
4956 4057 Circle
4992 3782 Circle
5029 3982 Circle
5066 3969 Circle
5103 4016 Circle
5139 4006 Circle
5176 4022 Circle
5213 4082 Circle
5250 4045 Circle
5286 4406 Circle
5323 4204 Circle
5360 4206 Circle
5396 4215 Circle
5433 4191 Circle
5470 4226 Circle
5507 4227 Circle
5543 4613 Circle
5580 4232 Circle
5617 4244 Circle
5654 4251 Circle
5690 4002 Circle
5727 4021 Circle
5764 3991 Circle
5801 3997 Circle
5837 4003 Circle
5874 3977 Circle
5911 4433 Circle
5947 3782 Circle
5984 3969 Circle
6021 3969 Circle
6058 3999 Circle
6094 3991 Circle
6131 4020 Circle
6168 4002 Circle
6205 3990 Circle
6241 4011 Circle
6278 4182 Circle
6315 4189 Circle
6352 4193 Circle
6388 4193 Circle
6425 4204 Circle
6462 4203 Circle
6498 4215 Circle
6535 4885 Circle
6572 4230 Circle
6609 4237 Circle
6645 3956 Circle
6682 3955 Circle
6719 3845 Circle
6756 3817 Circle
6792 4227 Circle
6829 3828 Circle
6866 3898 Circle
6902 3632 Circle
6939 3641 Circle
6976 3650 Circle
7013 3672 Circle
7049 3645 Circle
7086 3654 Circle
7123 3656 Circle
7160 3663 Circle
7196 3663 Circle
7233 3668 Circle
7270 3670 Circle
7307 3683 Circle
7343 3675 Circle
7380 3696 Circle
7417 3686 Circle
7453 3690 Circle
7490 3689 Circle
7527 4023 Circle
7564 3705 Circle
7600 3469 Circle
7637 3467 Circle
7674 3473 Circle
7711 3472 Circle
7747 3477 Circle
7784 4446 Circle
7821 3526 Circle
7858 3295 Circle
7894 3296 Circle
7931 3297 Circle
7968 3300 Circle
8004 3276 Circle
8041 3304 Circle
8078 3302 Circle
8115 3314 Circle
8151 3469 Circle
8188 3309 Circle
8225 3309 Circle
8262 3312 Circle
8298 3311 Circle
8335 3314 Circle
8372 3314 Circle
8408 3319 Circle
8445 3316 Circle
8482 3327 Circle
8519 3331 Circle
8555 3080 Circle
8592 3079 Circle
8629 3125 Circle
8666 3105 Circle
8702 3106 Circle
8739 3108 Circle
8776 3133 Circle
8813 2899 Circle
8849 2898 Circle
8886 2898 Circle
8923 2897 Circle
8959 2927 Circle
8996 2897 Circle
9033 2897 Circle
9070 2896 Circle
9106 2896 Circle
9143 2896 Circle
9180 2896 Circle
9217 2895 Circle
9253 2894 Circle
9290 2903 Circle
9327 2895 Circle
9364 2926 Circle
9400 2903 Circle
9437 2893 Circle
9474 2893 Circle
9510 2892 Circle
9547 2891 Circle
9584 2892 Circle
9621 2890 Circle
9657 2891 Circle
9694 2892 Circle
9731 2891 Circle
9768 2891 Circle
9804 2892 Circle
9841 2891 Circle
9878 2917 Circle
9915 2891 Circle
9951 2891 Circle
9988 2891 Circle
10025 2920 Circle
10061 2892 Circle
10098 2921 Circle
10135 2891 Circle
10172 2891 Circle
10208 2892 Circle
10245 2921 Circle
10282 2892 Circle
10319 2890 Circle
10355 2891 Circle
% End plot #1
% Begin plot #2
2.000 UP
0.500 UL
LT1
1.00 0.00 0.00 C 1797 4850 Crs
1833 5656 Crs
1870 4855 Crs
1907 4846 Crs
1944 4859 Crs
1980 4948 Crs
2017 4921 Crs
2054 4943 Crs
2091 5233 Crs
2127 4965 Crs
2164 4964 Crs
2201 4961 Crs
2238 4966 Crs
2274 4971 Crs
2311 4977 Crs
2348 4981 Crs
2384 4999 Crs
2421 4991 Crs
2458 5059 Crs
2495 4991 Crs
2531 5003 Crs
2568 5004 Crs
2605 5014 Crs
2642 5016 Crs
2678 5028 Crs
2715 5404 Crs
2752 5048 Crs
2788 5030 Crs
2825 4936 Crs
2862 4936 Crs
2899 5046 Crs
2935 5049 Crs
2972 5055 Crs
3009 5053 Crs
3046 5058 Crs
3082 5061 Crs
3119 5132 Crs
3156 5078 Crs
3193 5079 Crs
3229 5077 Crs
3266 5088 Crs
3303 5104 Crs
3339 6004 Crs
3376 5109 Crs
3413 5109 Crs
3450 5105 Crs
3486 5109 Crs
3523 5113 Crs
3560 5131 Crs
3597 5122 Crs
3633 5129 Crs
3670 5133 Crs
3707 5516 Crs
3744 5140 Crs
3780 5209 Crs
3817 5147 Crs
3854 5157 Crs
3890 5159 Crs
3927 5159 Crs
3964 5195 Crs
4001 5195 Crs
4037 5183 Crs
4074 5346 Crs
4111 5197 Crs
4148 5176 Crs
4184 5191 Crs
4221 5177 Crs
4258 5176 Crs
4295 5174 Crs
4331 5576 Crs
4368 5169 Crs
4405 5169 Crs
4441 5222 Crs
4478 5164 Crs
4515 5163 Crs
4552 5191 Crs
4588 5565 Crs
4625 5171 Crs
4662 5156 Crs
4699 5165 Crs
4735 4835 Crs
4772 4837 Crs
4809 4839 Crs
4845 4820 Crs
4882 4841 Crs
4919 4833 Crs
4956 5856 Crs
4992 5183 Crs
5029 5178 Crs
5066 5176 Crs
5103 5174 Crs
5139 5176 Crs
5176 5183 Crs
5213 5584 Crs
5250 5189 Crs
5286 5171 Crs
5323 5177 Crs
5360 5165 Crs
5396 5184 Crs
5433 5186 Crs
5470 5335 Crs
5507 5162 Crs
5543 5158 Crs
5580 5561 Crs
5617 5170 Crs
5654 5157 Crs
5690 4837 Crs
5727 4840 Crs
5764 4851 Crs
5801 4811 Crs
5837 5223 Crs
5874 4832 Crs
5911 5176 Crs
5947 5197 Crs
5984 5190 Crs
6021 5176 Crs
6058 5176 Crs
6094 5175 Crs
6131 5172 Crs
6168 5176 Crs
6205 5585 Crs
6241 5182 Crs
6278 5170 Crs
6315 5188 Crs
6352 5184 Crs
6388 5183 Crs
6425 5185 Crs
6462 5585 Crs
6498 5184 Crs
6535 5177 Crs
6572 5178 Crs
6609 5186 Crs
6645 4848 Crs
6682 4858 Crs
6719 4861 Crs
6756 4863 Crs
6792 4851 Crs
6829 4829 Crs
6866 5200 Crs
6902 5200 Crs
6939 5224 Crs
6976 5103 Crs
7013 5203 Crs
7049 5196 Crs
7086 5491 Crs
7123 5173 Crs
7160 5064 Crs
7196 5169 Crs
7233 5176 Crs
7270 5186 Crs
7307 5161 Crs
7343 5364 Crs
7380 5162 Crs
7417 5160 Crs
7453 5193 Crs
7490 5156 Crs
7527 5161 Crs
7564 5152 Crs
7600 5746 Crs
7637 4822 Crs
7674 4833 Crs
7711 4840 Crs
7747 4830 Crs
7784 4839 Crs
7821 5182 Crs
7858 5180 Crs
7894 5171 Crs
7931 5176 Crs
7968 5866 Crs
8004 5182 Crs
8041 5180 Crs
8078 5171 Crs
8115 5167 Crs
8151 5164 Crs
8188 5159 Crs
8225 5817 Crs
8262 5169 Crs
8298 5169 Crs
8335 5185 Crs
8372 5155 Crs
8408 5162 Crs
8445 5157 Crs
8482 6054 Crs
8519 5164 Crs
8555 4832 Crs
8592 4831 Crs
8629 4828 Crs
8666 4727 Crs
8702 4827 Crs
8739 4986 Crs
8776 5182 Crs
8813 5082 Crs
8849 5069 Crs
8886 5064 Crs
8923 5066 Crs
8959 5068 Crs
8996 5066 Crs
9033 5065 Crs
9070 5075 Crs
9106 5471 Crs
9143 5055 Crs
9180 5058 Crs
9217 5062 Crs
9253 5061 Crs
9290 5058 Crs
9327 5048 Crs
9364 5242 Crs
9400 5050 Crs
9437 5051 Crs
9474 5050 Crs
9510 4714 Crs
9547 4713 Crs
9584 4700 Crs
9621 4701 Crs
9657 4727 Crs
9694 4728 Crs
9731 5109 Crs
9768 4722 Crs
9804 4733 Crs
9841 4725 Crs
9878 4730 Crs
9915 4704 Crs
9951 4707 Crs
9988 4891 Crs
10025 4725 Crs
10061 4724 Crs
10098 4712 Crs
10135 4721 Crs
10172 4720 Crs
10208 4703 Crs
10245 4727 Crs
10282 4724 Crs
10319 4702 Crs
10355 4721 Crs
% End plot #2
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
