%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 57 124 598 392
%%HiResBoundingBox: 57.320 124.368 597.397 391.009
%%Title: /var/tmp/oct-20OAth.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Jun 13 22:34:21 2012
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/var/tmp/oct-20OAth.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (aleks)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun 13 22:34:21 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% encoding for code page koi8r (8-bit Russian)
% version 1.0:	- Mainly letters are mapped. The following positions
% (JFi)		  are left blank (undefined):
%		-- first 32 positions,
%		-- frame characters,
%		-- a few special characters.

/reencodeKOI8R {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding KOI8REncoding def } if
} if
currentdict end definefont
} def
/KOI8REncoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
/SF100000/SF110000/SF010000/SF030000/SF020000/SF040000/SF080000/SF090000
/SF060000/SF070000/SF050000/SF600000/SF570000/SF610000/SF580000/SF590000
/SF140000/SF150000/SF160000/SS260000/filledbox/bullet/radical/approxequal
/lessequal/greaterequal/space/SS270000/degree/twosuperior/periodcentered/divide
/SF430000/SF240000/SF510000/afii10071/SF520000/SF390000/SF220000/SF210000
/SF250000/SF500000/SF490000/SF380000/SF280000/SF270000/SF260000/SF360000
/SF370000/SF420000/SF190000/afii10023/SF200000/SF230000/SF470000/SF480000
/SF410000/SF450000/SF460000/SF400000/SF540000/SF530000/SF440000/copyright
/afii10096/afii10065/afii10066/afii10088/afii10069/afii10070/afii10086/afii10068
/afii10087/afii10074/afii10075/afii10076/afii10077/afii10078/afii10079/afii10080
/afii10081/afii10097/afii10082/afii10083/afii10084/afii10085/afii10072/afii10067
/afii10094/afii10093/afii10073/afii10090/afii10095/afii10091/afii10089/afii10092
/afii10048/afii10017/afii10018/afii10040/afii10021/afii10022/afii10038/afii10020
/afii10039/afii10026/afii10027/afii10028/afii10029/afii10030/afii10031/afii10032
/afii10033/afii10049/afii10034/afii10035/afii10036/afii10037/afii10024/afii10019
/afii10046/afii10045/afii10025/afii10042/afii10047/afii10043/afii10041/afii10044
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Times reencodeKOI8R def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 320 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.000 UP
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1952 2464 8991 4351 BoxColFill
LCb setrgbcolor
1952 2464 M
0 4351 V
8991 0 V
0 -4351 V
-8991 0 V
stroke
0.500 UL
LTb
1952 3030 M
88 0 V
8903 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1760 3030 M
[ [(Times) 320.0 0.0 true true 0 (0.249)]
] -106.7 MRshow
0.500 UL
LTb
1952 3633 M
88 0 V
8903 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1760 3633 M
[ [(Times) 320.0 0.0 true true 0 (0.2495)]
] -106.7 MRshow
0.500 UL
LTb
1952 4236 M
88 0 V
8903 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1760 4236 M
[ [(Times) 320.0 0.0 true true 0 (0.25)]
] -106.7 MRshow
0.500 UL
LTb
1952 4838 M
88 0 V
8903 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1760 4838 M
[ [(Times) 320.0 0.0 true true 0 (0.2505)]
] -106.7 MRshow
0.500 UL
LTb
1952 5441 M
88 0 V
8903 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1760 5441 M
[ [(Times) 320.0 0.0 true true 0 (0.251)]
] -106.7 MRshow
0.500 UL
LTb
1952 6044 M
88 0 V
8903 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1760 6044 M
[ [(Times) 320.0 0.0 true true 0 (0.2515)]
] -106.7 MRshow
0.500 UL
LTb
1952 6646 M
88 0 V
8903 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1760 6646 M
[ [(Times) 320.0 0.0 true true 0 (0.252)]
] -106.7 MRshow
0.500 UL
LTb
10328 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 10328 2144 M
[ [(Times) 320.0 0.0 true true 0 (-0.03)]
] -106.7 MCshow
0.500 UL
LTb
8910 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 8910 2144 M
[ [(Times) 320.0 0.0 true true 0 (-0.02)]
] -106.7 MCshow
0.500 UL
LTb
7492 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 7492 2144 M
[ [(Times) 320.0 0.0 true true 0 (-0.01)]
] -106.7 MCshow
0.500 UL
LTb
6075 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 6075 2144 M
[ [(Times) 320.0 0.0 true true 0 (0)]
] -106.7 MCshow
0.500 UL
LTb
4657 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 4657 2144 M
[ [(Times) 320.0 0.0 true true 0 (0.01)]
] -106.7 MCshow
0.500 UL
LTb
3239 2464 M
0 88 V
0 4263 R
0 -88 V
stroke
0.00 0.00 0.00 C 3239 2144 M
[ [(Times) 320.0 0.0 true true 0 (0.02)]
] -106.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1952 6815 N
0 -4351 V
8991 0 V
0 4351 V
-8991 0 V
Z stroke
0.00 0.00 0.00 C 256 4639 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 320.0 0.0 true true 0 (z \(meter\))]
] -106.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6447 1664 M
[ [(Times) 320.0 0.0 true true 0 (y \(meter\))]
] -106.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
% Begin plot #1
0.500 UL
LT0
0.00 0.00 1.00 C 5925 6063 M
-1 0 V
-1 0 V
-1 0 V
-1 0 V
-1 0 V
-2 0 V
-2 0 V
-2 0 V
-3 0 V
-3 0 V
-3 0 V
-2 0 V
-3 0 V
-2 0 V
-1 0 V
-1 0 V
1 0 V
2 0 V
4 0 V
7 0 V
9 0 V
12 0 V
16 0 V
20 0 V
24 0 V
29 0 V
35 0 V
40 0 V
47 0 V
54 0 V
62 0 V
69 0 V
77 0 V
87 0 V
95 0 V
105 0 V
115 0 V
125 0 V
134 0 V
145 0 V
154 0 V
165 0 V
174 0 V
182 0 V
191 0 V
199 0 V
205 0 V
210 0 V
214 0 V
216 0 V
217 0 V
214 0 V
210 0 V
203 0 V
193 0 V
179 0 V
162 0 V
141 0 V
118 0 V
92 0 V
63 0 V
31 0 V
-3 0 V
-39 0 V
-77 0 V
-117 0 V
-158 0 V
-199 0 V
-242 0 V
-285 0 V
-325 0 V
-366 0 V
-403 0 V
-439 0 V
-469 0 V
-495 0 V
-513 0 V
-512 0 V
-477 0 V
-447 0 V
-404 0 V
-383 0 V
-373 0 V
-350 0 V
-314 0 V
-264 0 V
-207 0 V
-152 0 V
-106 0 V
-69 0 V
-16 0 V
13 0 V
56 0 V
105 0 V
153 0 V
202 0 V
249 0 V
295 0 V
338 0 V
379 0 V
416 0 V
446 0 V
470 0 V
484 0 V
stroke 6345 6063 M
473 0 V
446 0 V
458 0 V
377 0 V
314 0 V
307 0 V
294 0 V
258 0 V
218 0 V
151 0 V
119 0 V
76 0 V
35 0 V
-15 0 V
-64 0 V
-114 0 V
-164 0 V
-212 0 V
-262 0 V
-308 0 V
-353 0 V
-396 0 V
-435 0 V
-466 0 V
-491 0 V
-470 0 V
-427 0 V
-411 0 V
-426 0 V
-382 0 V
-296 0 V
-287 0 V
-279 0 V
-248 0 V
-226 0 V
-177 0 V
-134 0 V
-88 0 V
-41 0 V
6 0 V
52 0 V
99 0 V
144 0 V
191 0 V
237 0 V
282 0 V
327 0 V
368 0 V
408 0 V
441 0 V
459 0 V
461 0 V
448 0 V
453 0 V
442 0 V
391 0 V
329 0 V
317 0 V
312 0 V
269 0 V
224 0 V
177 0 V
129 0 V
81 0 V
32 0 V
-18 0 V
-68 0 V
-118 0 V
-168 0 V
-218 0 V
-266 0 V
-314 0 V
-358 0 V
-394 0 V
-412 0 V
-432 0 V
-450 0 V
-461 0 V
-470 0 V
-457 0 V
-446 0 V
-424 0 V
-409 0 V
-376 0 V
-352 0 V
-305 0 V
-257 0 V
-199 0 V
-145 0 V
-117 0 V
-79 0 V
-48 0 V
-37 0 V
-28 0 V
4 0 V
36 0 V
66 0 V
94 0 V
122 0 V
146 0 V
169 0 V
187 0 V
205 0 V
217 0 V
stroke 3198 6063 M
228 0 V
235 0 V
241 0 V
189 0 V
189 0 V
204 0 V
187 0 V
177 0 V
189 0 V
186 0 V
192 0 V
199 0 V
188 0 V
176 0 V
164 0 V
151 0 V
138 0 V
124 0 V
112 0 V
98 0 V
% End plot #1
% Begin plot #2
stroke
LT0
1.00 0.00 0.00 C 5929 6059 M
-44 103 V
40 -101 V
-33 30 V
0 -32 V
-1 20 V
4 -23 V
-3 14 V
-1 1 V
1 -6 V
0 2 V
0 -3 V
-45 92 V
45 -87 V
0 -5 V
0 1 V
0 -15 V
-1 -21 V
0 -1 V
-46 81 V
44 -44 V
-42 123 V
-3 3 V
0 15 V
0 34 V
0 4 V
-1 -42 V
1 41 V
1 -96 V
0 41 V
2 -29 V
46 -133 V
-1 -11 V
-2 -33 V
46 -61 V
0 19 V
48 -52 V
40 -25 V
79 -85 V
40 33 V
80 -118 V
78 -17 V
132 -168 V
75 75 V
117 -99 V
129 -4 V
163 2 V
170 -86 V
161 11 V
150 104 V
213 -58 V
197 77 V
196 -42 V
198 93 V
199 134 V
253 -137 V
201 125 V
252 -45 V
286 -137 V
246 -74 V
235 127 V
158 -262 V
165 -599 V
163 -551 V
133 -141 V
104 -81 V
139 92 V
-12 -89 V
-91 76 V
-75 199 V
-153 -120 V
-51 38 V
-85 80 V
-49 57 V
-145 -98 V
9922 3959 L
9709 3833 L
-222 36 V
-322 21 V
-296 357 V
-308 566 V
-324 776 V
-388 587 V
-427 114 V
-391 136 V
-400 -55 V
6256 6171 L
-454 -49 V
5318 5032 L
4878 4159 L
4497 3768 L
4199 3257 L
3966 2898 L
-186 194 V
-159 199 V
-150 52 V
-57 -44 V
-81 -278 V
-40 -252 V
-14 -88 V
-23 63 V
3 18 V
51 42 V
241 -286 V
290 -54 V
263 899 V
264 806 V
206 634 V
370 603 V
401 378 V
372 125 V
393 268 V
542 146 V
302 -248 V
7245 4695 L
7676 3636 L
405 -155 V
324 -115 V
275 104 V
152 -133 V
199 96 V
139 115 V
168 260 V
106 154 V
63 -106 V
-37 -324 V
-41 -206 V
-58 3 V
-96 68 V
9057 3290 L
8769 2930 L
-332 613 V
8130 4782 L
-298 690 V
-253 282 V
-301 93 V
-303 427 V
-388 237 V
6061 5968 L
-407 43 V
5415 4750 L
5004 3952 L
4590 3505 L
4266 3123 L
-330 -84 V
-215 275 V
-220 289 V
-165 -42 V
-69 -251 V
-121 17 V
-53 -102 V
-23 69 V
-14 -89 V
-51 88 V
9 145 V
145 -170 V
259 -184 V
288 413 V
326 664 V
273 594 V
360 506 V
406 498 V
391 347 V
473 235 V
474 262 V
387 -276 V
7109 4916 L
7537 3854 L
445 -190 V
376 -113 V
318 238 V
257 203 V
236 14 V
159 -114 V
108 46 V
97 154 V
55 102 V
60 68 V
4 -65 V
-24 13 V
-151 -66 V
9296 4037 L
-203 -92 V
-254 349 V
-324 943 V
-371 836 V
7736 5958 L
-422 372 V
-460 310 V
-431 175 V
5949 5634 L
-481 -95 V
4973 4743 L
4545 4174 L
4123 3699 L
3794 3505 L
-272 85 V
-193 32 V
3183 3478 L
-178 104 V
-113 21 V
-94 -33 V
-130 64 V
-119 -25 V
-58 -139 V
-50 -100 V
6 61 V
41 -115 V
106 30 V
25 766 V
100 495 V
183 339 V
57 290 V
85 185 V
42 40 V
-52 249 V
59 165 V
62 231 V
185 77 V
244 49 V
161 14 V
170 106 V
240 -69 V
206 -18 V
237 -32 V
327 -166 V
314 -187 V
458 -324 V
304 188 V
170 323 V
145 318 V
103 205 V
128 7 V
117 89 V
120 -99 V
% End plot #2
1.000 UP
stroke
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
